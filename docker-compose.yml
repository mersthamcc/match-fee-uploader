version: '3.8'
services:
  postgres:
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      POSTGRES_USER: ${DATABASE_ROOT_USER}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - pg-matchfee-data:/var/lib/postgresql/data
    networks:
      - backendnetwork
    restart: unless-stopped
    healthcheck:
      test: pg_isready -U ${DATABASE_ROOT_USER}
      interval: 5s
      retries: 30

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - backendnetwork
    restart: unless-stopped

#  flyway:
#    build:
#      context: sql/
#      dockerfile: Dockerfile
#    image: mersthamcc/flyway:latest
#    command: ["migrate"]
#    volumes:
#      - ./sql/dev-migrations:/flyway/dev-migrations
#    environment:
#      FLYWAY_URL: ${DATABASE_BASE_URL}/${DATABASE_NAME}
#      FLYWAY_USER: ${DATABASE_ROOT_USER}
#      FLYWAY_PASSWORD: ${DATABASE_ROOT_PASSWORD}
#      FLYWAY_LOCATIONS: "filesystem:/flyway/sql,filesystem:/flyway/dev-migrations"
#      FLYWAY_PLACEHOLDERS_SITENAME: www.${DEVDOMAIN}
#      FLYWAY_PLACEHOLDERS_ADMIN_USER: ${ADMIN_EMAILADDRESS}
#      FLYWAY_PLACEHOLDERS_CONTENT_USER: ${DATABASE_USER}
#      FLYWAY_PLACEHOLDERS_CONTENT_USER_PASSWORD: ${DATABASE_PASSWORD}
#      FLYWAY_PLACEHOLDERS_DATABASE_NAME: ${DATABASE_NAME}
#      FLYWAY_PLACEHOLDERS_APPS_DATABASE_PASSWORD: ${DATABASE_ROOT_PASSWORD}
#      FLYWAY_MIXED: "true"
#    networks:
#      - backendnetwork
#    restart: on-failure
#    depends_on:
#      - postgres

#  pgadmin:
#    image: dpage/pgadmin4:latest
#    environment:
#      PGADMIN_CONFIG_SERVER_MODE: "False"
#      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False" # pragma: allowlist secret
#      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAILADDRESS}
#      PGADMIN_DEFAULT_PASSWORD: ${GRAFANA_PASSWORD}
#    volumes:
#      - ./dev-config/pgadmin4/servers.json:/pgadmin4/servers.json:ro
#    networks:
#      - backendnetwork
#    restart: unless-stopped
#    depends_on:
#      - postgres

volumes:
  pg-matchfee-data:
  redis-matchfee-config:
  redis-matchfee-data:

networks:
  backendnetwork:
